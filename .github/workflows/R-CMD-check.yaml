# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: macos-latest,   r: 'oldrel-1'}
          - {os: macos-latest,   r: 'oldrel-2'}

          - {os: windows-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: windows-latest,  r: 'next', http-user-agent: 'release'}
          - {os: windows-latest,  r: 'release'}
          - {os: windows-latest,  r: 'oldrel-1'}

          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'next', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}
          - {os: ubuntu-latest,  r: 'oldrel-2'}
          - {os: ubuntu-latest,  r: 'oldrel-3'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      DISPLAY: ':99.0'

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-tinytex@v2

      - name: Setup makeindex
        run: |
            tlmgr update --self
            tlmgr install makeindex

      # Some additionnal set up for clipr in ubuntu
      - name: Install and run XVFB
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          sudo /usr/bin/Xvfb :99.0 -screen 0 1280x1024x24 &
          sleep 3

      - name: Installation de xclip pour clipr
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y xclip
          uptime | xclip -i -sel p -f | xclip -i -sel c
          xclip -o -sel clipboard

      - name: Installation pour Linux (pdftools and pdfcrop)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install ghostscript
          sudo apt install texlive-extra-utils
          sudo apt-get install libpoppler-cpp-dev

      - name: Installation pour MacOS (pdftools and pdfcrop)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install --cask xquartz
          brew install --cask tex-live-utility
          brew install poppler

      - name: Installation pour Windows (pdftools and pdfcrop)
        if: runner.os == 'Windows'
        run: |
          tlmgr update --self
          tlmgr install pdfcrop
          tlmgr list --only-installed

      - name: "Update tidy on macos"
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install tidy-html5

      - name: "Install tidy on Linux"
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y tidy

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          upload-results: true
          args: '"--as-cran"'
          error-on: '"note"'
